//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/_Source/InputSystem/GuitarControls.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @GuitarControls: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @GuitarControls()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""GuitarControls"",
    ""maps"": [
        {
            ""name"": ""GuitarMapping"",
            ""id"": ""ea69a80e-9cc6-4caa-8443-e18de32550b8"",
            ""actions"": [
                {
                    ""name"": ""GreenFret"",
                    ""type"": ""Button"",
                    ""id"": ""d38c3b91-6351-491f-8f28-da6c8a13e17e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RedFret"",
                    ""type"": ""Button"",
                    ""id"": ""689dac1c-5b7a-4426-83f4-2bfeee8b5e2d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""YellowFret"",
                    ""type"": ""Button"",
                    ""id"": ""e8fd788f-8607-426a-b946-bb447b75c36c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""BlueFret"",
                    ""type"": ""Button"",
                    ""id"": ""6495e0e3-8874-4dbe-83c9-a7f1951357ae"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""StarPower"",
                    ""type"": ""Value"",
                    ""id"": ""c13051f3-a2ac-4c5f-ad64-3819c49e531d"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""GreenFretPress"",
                    ""type"": ""Button"",
                    ""id"": ""7755c02e-5210-4363-9768-a8a2c2ad9d7f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RedFretPress"",
                    ""type"": ""Button"",
                    ""id"": ""dd830542-ee33-4fe6-b937-3a9ee952783c"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""YellowFretPress"",
                    ""type"": ""Button"",
                    ""id"": ""7e016d7e-c9c5-421c-b5ee-e676957feb69"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""BlueFretPress"",
                    ""type"": ""Button"",
                    ""id"": ""28a2e5fa-5ed7-4ae1-953a-7e3700ccf909"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Strum"",
                    ""type"": ""Button"",
                    ""id"": ""64ab4fda-3b23-46c9-acf1-b9c65e2d116b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""485c45cc-4132-451e-8cd7-217d471bb731"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardScheme"",
                    ""action"": ""GreenFret"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dccc2c42-56db-447e-bab9-bd882fdfbd26"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardScheme"",
                    ""action"": ""RedFret"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""007b1775-18ed-4f7c-a285-efcf835375ad"",
                    ""path"": ""<Keyboard>/j"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardScheme"",
                    ""action"": ""YellowFret"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d63ba907-1149-4fc4-a835-21c78035bf85"",
                    ""path"": ""<Keyboard>/k"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardScheme"",
                    ""action"": ""BlueFret"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""be15f0eb-a2ac-455b-96c3-2ba7a964e5c2"",
                    ""path"": ""<FiveFretGuitar>/tilt"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GuitarControllerScheme"",
                    ""action"": ""StarPower"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""d2e1d0db-5c50-4d58-9ea4-b55aaef9a7ab"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KeyboardScheme"",
                    ""action"": ""StarPower"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""18637ca5-d171-48ce-9736-fca911b890a4"",
                    ""path"": ""<FiveFretGuitar>/selectButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GuitarControllerScheme"",
                    ""action"": ""StarPower"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""46b26da6-f7f9-490a-9859-e54f7c38ee51"",
                    ""path"": ""<FiveFretGuitar>/greenFret"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GuitarControllerScheme"",
                    ""action"": ""GreenFretPress"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9cb13602-20f0-4019-9ee2-b98a9d570ad9"",
                    ""path"": ""<FiveFretGuitar>/redFret"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GuitarControllerScheme"",
                    ""action"": ""RedFretPress"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3ebdf226-35fc-470a-8ad1-87120bef8a35"",
                    ""path"": ""<FiveFretGuitar>/yellowFret"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GuitarControllerScheme"",
                    ""action"": ""YellowFretPress"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""3ef0837a-660a-443e-8116-d44df775c105"",
                    ""path"": ""<FiveFretGuitar>/blueFret"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GuitarControllerScheme"",
                    ""action"": ""BlueFretPress"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fbc8ce66-bb38-4e54-a326-d1868d3294a2"",
                    ""path"": ""<FiveFretGuitar>/dpad/down"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GuitarControllerScheme"",
                    ""action"": ""Strum"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""57452896-14d0-44c3-8224-3224d812d24c"",
                    ""path"": ""<FiveFretGuitar>/dpad/up"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""GuitarControllerScheme"",
                    ""action"": ""Strum"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""GuitarControllerScheme"",
            ""bindingGroup"": ""GuitarControllerScheme"",
            ""devices"": [
                {
                    ""devicePath"": ""<FiveFretGuitar>"",
                    ""isOptional"": true,
                    ""isOR"": false
                }
            ]
        },
        {
            ""name"": ""KeyboardScheme"",
            ""bindingGroup"": ""KeyboardScheme"",
            ""devices"": [
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // GuitarMapping
        m_GuitarMapping = asset.FindActionMap("GuitarMapping", throwIfNotFound: true);
        m_GuitarMapping_GreenFret = m_GuitarMapping.FindAction("GreenFret", throwIfNotFound: true);
        m_GuitarMapping_RedFret = m_GuitarMapping.FindAction("RedFret", throwIfNotFound: true);
        m_GuitarMapping_YellowFret = m_GuitarMapping.FindAction("YellowFret", throwIfNotFound: true);
        m_GuitarMapping_BlueFret = m_GuitarMapping.FindAction("BlueFret", throwIfNotFound: true);
        m_GuitarMapping_StarPower = m_GuitarMapping.FindAction("StarPower", throwIfNotFound: true);
        m_GuitarMapping_GreenFretPress = m_GuitarMapping.FindAction("GreenFretPress", throwIfNotFound: true);
        m_GuitarMapping_RedFretPress = m_GuitarMapping.FindAction("RedFretPress", throwIfNotFound: true);
        m_GuitarMapping_YellowFretPress = m_GuitarMapping.FindAction("YellowFretPress", throwIfNotFound: true);
        m_GuitarMapping_BlueFretPress = m_GuitarMapping.FindAction("BlueFretPress", throwIfNotFound: true);
        m_GuitarMapping_Strum = m_GuitarMapping.FindAction("Strum", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // GuitarMapping
    private readonly InputActionMap m_GuitarMapping;
    private List<IGuitarMappingActions> m_GuitarMappingActionsCallbackInterfaces = new List<IGuitarMappingActions>();
    private readonly InputAction m_GuitarMapping_GreenFret;
    private readonly InputAction m_GuitarMapping_RedFret;
    private readonly InputAction m_GuitarMapping_YellowFret;
    private readonly InputAction m_GuitarMapping_BlueFret;
    private readonly InputAction m_GuitarMapping_StarPower;
    private readonly InputAction m_GuitarMapping_GreenFretPress;
    private readonly InputAction m_GuitarMapping_RedFretPress;
    private readonly InputAction m_GuitarMapping_YellowFretPress;
    private readonly InputAction m_GuitarMapping_BlueFretPress;
    private readonly InputAction m_GuitarMapping_Strum;
    public struct GuitarMappingActions
    {
        private @GuitarControls m_Wrapper;
        public GuitarMappingActions(@GuitarControls wrapper) { m_Wrapper = wrapper; }
        public InputAction @GreenFret => m_Wrapper.m_GuitarMapping_GreenFret;
        public InputAction @RedFret => m_Wrapper.m_GuitarMapping_RedFret;
        public InputAction @YellowFret => m_Wrapper.m_GuitarMapping_YellowFret;
        public InputAction @BlueFret => m_Wrapper.m_GuitarMapping_BlueFret;
        public InputAction @StarPower => m_Wrapper.m_GuitarMapping_StarPower;
        public InputAction @GreenFretPress => m_Wrapper.m_GuitarMapping_GreenFretPress;
        public InputAction @RedFretPress => m_Wrapper.m_GuitarMapping_RedFretPress;
        public InputAction @YellowFretPress => m_Wrapper.m_GuitarMapping_YellowFretPress;
        public InputAction @BlueFretPress => m_Wrapper.m_GuitarMapping_BlueFretPress;
        public InputAction @Strum => m_Wrapper.m_GuitarMapping_Strum;
        public InputActionMap Get() { return m_Wrapper.m_GuitarMapping; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(GuitarMappingActions set) { return set.Get(); }
        public void AddCallbacks(IGuitarMappingActions instance)
        {
            if (instance == null || m_Wrapper.m_GuitarMappingActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_GuitarMappingActionsCallbackInterfaces.Add(instance);
            @GreenFret.started += instance.OnGreenFret;
            @GreenFret.performed += instance.OnGreenFret;
            @GreenFret.canceled += instance.OnGreenFret;
            @RedFret.started += instance.OnRedFret;
            @RedFret.performed += instance.OnRedFret;
            @RedFret.canceled += instance.OnRedFret;
            @YellowFret.started += instance.OnYellowFret;
            @YellowFret.performed += instance.OnYellowFret;
            @YellowFret.canceled += instance.OnYellowFret;
            @BlueFret.started += instance.OnBlueFret;
            @BlueFret.performed += instance.OnBlueFret;
            @BlueFret.canceled += instance.OnBlueFret;
            @StarPower.started += instance.OnStarPower;
            @StarPower.performed += instance.OnStarPower;
            @StarPower.canceled += instance.OnStarPower;
            @GreenFretPress.started += instance.OnGreenFretPress;
            @GreenFretPress.performed += instance.OnGreenFretPress;
            @GreenFretPress.canceled += instance.OnGreenFretPress;
            @RedFretPress.started += instance.OnRedFretPress;
            @RedFretPress.performed += instance.OnRedFretPress;
            @RedFretPress.canceled += instance.OnRedFretPress;
            @YellowFretPress.started += instance.OnYellowFretPress;
            @YellowFretPress.performed += instance.OnYellowFretPress;
            @YellowFretPress.canceled += instance.OnYellowFretPress;
            @BlueFretPress.started += instance.OnBlueFretPress;
            @BlueFretPress.performed += instance.OnBlueFretPress;
            @BlueFretPress.canceled += instance.OnBlueFretPress;
            @Strum.started += instance.OnStrum;
            @Strum.performed += instance.OnStrum;
            @Strum.canceled += instance.OnStrum;
        }

        private void UnregisterCallbacks(IGuitarMappingActions instance)
        {
            @GreenFret.started -= instance.OnGreenFret;
            @GreenFret.performed -= instance.OnGreenFret;
            @GreenFret.canceled -= instance.OnGreenFret;
            @RedFret.started -= instance.OnRedFret;
            @RedFret.performed -= instance.OnRedFret;
            @RedFret.canceled -= instance.OnRedFret;
            @YellowFret.started -= instance.OnYellowFret;
            @YellowFret.performed -= instance.OnYellowFret;
            @YellowFret.canceled -= instance.OnYellowFret;
            @BlueFret.started -= instance.OnBlueFret;
            @BlueFret.performed -= instance.OnBlueFret;
            @BlueFret.canceled -= instance.OnBlueFret;
            @StarPower.started -= instance.OnStarPower;
            @StarPower.performed -= instance.OnStarPower;
            @StarPower.canceled -= instance.OnStarPower;
            @GreenFretPress.started -= instance.OnGreenFretPress;
            @GreenFretPress.performed -= instance.OnGreenFretPress;
            @GreenFretPress.canceled -= instance.OnGreenFretPress;
            @RedFretPress.started -= instance.OnRedFretPress;
            @RedFretPress.performed -= instance.OnRedFretPress;
            @RedFretPress.canceled -= instance.OnRedFretPress;
            @YellowFretPress.started -= instance.OnYellowFretPress;
            @YellowFretPress.performed -= instance.OnYellowFretPress;
            @YellowFretPress.canceled -= instance.OnYellowFretPress;
            @BlueFretPress.started -= instance.OnBlueFretPress;
            @BlueFretPress.performed -= instance.OnBlueFretPress;
            @BlueFretPress.canceled -= instance.OnBlueFretPress;
            @Strum.started -= instance.OnStrum;
            @Strum.performed -= instance.OnStrum;
            @Strum.canceled -= instance.OnStrum;
        }

        public void RemoveCallbacks(IGuitarMappingActions instance)
        {
            if (m_Wrapper.m_GuitarMappingActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IGuitarMappingActions instance)
        {
            foreach (var item in m_Wrapper.m_GuitarMappingActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_GuitarMappingActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public GuitarMappingActions @GuitarMapping => new GuitarMappingActions(this);
    private int m_GuitarControllerSchemeSchemeIndex = -1;
    public InputControlScheme GuitarControllerSchemeScheme
    {
        get
        {
            if (m_GuitarControllerSchemeSchemeIndex == -1) m_GuitarControllerSchemeSchemeIndex = asset.FindControlSchemeIndex("GuitarControllerScheme");
            return asset.controlSchemes[m_GuitarControllerSchemeSchemeIndex];
        }
    }
    private int m_KeyboardSchemeSchemeIndex = -1;
    public InputControlScheme KeyboardSchemeScheme
    {
        get
        {
            if (m_KeyboardSchemeSchemeIndex == -1) m_KeyboardSchemeSchemeIndex = asset.FindControlSchemeIndex("KeyboardScheme");
            return asset.controlSchemes[m_KeyboardSchemeSchemeIndex];
        }
    }
    public interface IGuitarMappingActions
    {
        void OnGreenFret(InputAction.CallbackContext context);
        void OnRedFret(InputAction.CallbackContext context);
        void OnYellowFret(InputAction.CallbackContext context);
        void OnBlueFret(InputAction.CallbackContext context);
        void OnStarPower(InputAction.CallbackContext context);
        void OnGreenFretPress(InputAction.CallbackContext context);
        void OnRedFretPress(InputAction.CallbackContext context);
        void OnYellowFretPress(InputAction.CallbackContext context);
        void OnBlueFretPress(InputAction.CallbackContext context);
        void OnStrum(InputAction.CallbackContext context);
    }
}
